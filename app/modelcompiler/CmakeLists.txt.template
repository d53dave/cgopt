cmake_minimum_required(VERSION 3.3)
project(csaopt_usermodel)

set (PROJECT_SOURCE_DIR ${CMAKE_CURRENT_SOURCE_DIR})

set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=c++1y")
set(CMAKE_CXX_STANDARD_REQUIRED ON)

set(CMAKE_MODULE_PATH ${CMAKE_MODULE_PATH} ${CMAKE_CURRENT_SOURCE_DIR}/../CMakeModules) # main (top) cmake dir
set(CMAKE_MODULE_PATH ${CMAKE_MODULE_PATH} ${CMAKE_CURRENT_SOURCE_DIR}/CMakeModules) # project specific cmake dir

include(LibFindMacros)

set(THREADS_PREFER_PTHREAD_FLAG ON)

find_package(model)
add_subdirectory(model)

include_directories(
        # model
        ${model_INCLUDE_DIR}
        ${model_INCL_DIRS}
        ${PROJECT_SOURCE_DIR}/include
        ${PROJECT_BINARY_DIR}/include
)

set(SOURCE_FILES {user_sources}) # NOTE: user_sources is a python literal and will be replaced by the actual files

add_library(csaopt_usermodel ${SOURCE_FILES} $<TARGET_OBJECTS:model>)
add_definitions( -DCSAOPT_MODEL_PATH="${CMAKE_CURRENT_SOURCE_DIR}/model")