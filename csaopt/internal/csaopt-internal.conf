{
    console {
        width_default = 80
        width_max = 120
    }

    broker {
        defaults {
            local_port = 6379
            remote_port = 63379
        }
    }

    model {
        validation {
            globals_token = "# -- Globals"
            reserved_keywords = ['import', 'except ', 'except:', 'finally', 'yield']
        }
    }

    remote {
        platform = aws

        worker_join_retry_delay = 4 # seconds

        broker_image = bitnami/redis:4.0.11
        worker_image = d53dave/csaopt-worker:0.1.1

        aws {
            # This is an AMI prepared specially for CSAOpt and based on Ubuntu 16.04.
            # Tests showed that setting up an instance from scratch with ansible
            # takes several minutes, so this image is provided instead. It contains
            # the nvidia drivers, docker and nvidia-docker. No further setup needed.
            #
            # This AMI currently only exists on region eu-central-1. 
            worker_ami = ami-01c83cc302e7b4984

            # This is an AMI provided for the CSAOpt Message Queue which is just a fancy name
            # for Apache Kafka.
            # 
            # This AMI currently only exists on region eu-central-1. 
            broker_ami = ami-54416fbf

            # At time of writing, the following instances should be supported
            # on the AWS side (but make sure your region supports the selected instance tyoe): 
            # - G2: g2.2xlarge, g2.8xlarge
            # - P2: p2.xlarge, p2.8xlarge, p2.16xlarge
            # - G3: g3.4xlarge, g3.8xlarge, g3.16xlarge
            worker_instance_type = g2.2xlarge

            # This will be used for the message queue
            broker_instance_type = m5.large

            default_region = eu-central-1

            timeout_provision = 160000
            timeout_startup = 130000

            security_group_prefix = csaopt_

            userdata_rel_path = csaopt/internal/aws_startup_scripts/aws-userdata
        }
   }
}